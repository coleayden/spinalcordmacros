/*Written using ImageJ2/FIJI Version 2.9.0/1.53t, Build a33148d777
date 2023-04-20
For 3-channel images wherein 
Ch1=DAPI, Ch2=GFP, 
Ch3=Aspa (or other stain less selective than GFP)*/

//////USE INSTRUCTIONS//////
//To convert .txt to .ijm//
/*right click .txt file -> Get Info -> Name & Extension: replace '.txt' with '.ijm'*/
//To install//
/*open ImageJ -> Plugins -> Install... -> select this macro in .ijm format ->
save in folder, eg 'Analyze' -> restart ImageJ*/
//To use//
/*Open image to analyze -> Plugins -> Analyze -> select macro
-Results will appear in a pop-up "Summary" or "Results" window and will append during processing*/


//////VARIABLES//////
ch3subBackgroundValue = 40;
ch3ThresholdMethod = "Moments";
ch2ThresholdMethod = "Moments";
ch3RemoveOutliersThreshold = 50;
ch2RemoveOutliersThreshold = 50;

//////SET-UP//////
//set scale and measurements, open ROI Manager
run("Set Scale...", "distance=1 known=0.650 unit=micron global");
run("8-bit");
getDimensions(width, height, channels, slices, frames);
Width = width;
Height = height;

run("Labels...", "color=white font=12");
setForegroundColor(255, 255, 255);
run("Options...", "iterations=1 count=1 black do=Nothing");
setBatchMode(false); //comment out for slow testing
run("ROI Manager...");
setBatchMode(true); //comment out for slow testing
roiManager("Centered", "false");
roiManager("UseNames", "true");
roiManager("Show All without labels");
roiManager("Show None");

//////DUPLICATE//////
//save original title and rename for code
title = getTitle();
dir = getDirectory("image");
rename("Sample");

//Duplicate original image 
run("Duplicate...", "duplicate stack");


//////PRE-PROCESSING FOR COUNTS//////

run("Stack to Images");

selectWindow("Sample-1-0001");
close();

//Threshold Ch3 and invert for mask
selectWindow("Sample-1-0003");
run("Subtract Background...", "rolling="+ch3subBackgroundValue+"");
run("Auto Threshold", "method=Moments white");
run("Remove Outliers...", "radius=2 threshold="+ch3RemoveOutliersThreshold+" which=Bright");
run("Invert");

//Threshold Ch2
selectWindow("Sample-1-0002");
run("Auto Threshold", "method=Moments white");
run("Remove Outliers...", "radius=5 threshold="+ch2RemoveOutliersThreshold+" which=Bright");

//create channel 3 mask over channel 2
imageCalculator("Subtract create", "Sample-1-0002","Sample-1-0003");
rename("Ch2+Ch3+");

//create channel 3
selectWindow("Sample-1-0003");
run("Invert");
rename("Ch3+");

//create channel 2
selectWindow("Sample-1-0002");
rename("Ch2+");


//////OUTLINE ROIs//////
selectWindow("Sample");
setBatchMode("show");
setTool("Polygon");
do {
	waitForUser("Go to channel 1.\nOutline entire section, pressing 't' when done.\nThen click OK.");
} while (roiManager("count") == 0 || roiManager("count") > 1);

roiManager("select", 0);
roiManager("rename", "Whole Section"); 


//////OUTLINE GRAY MATTER//////
selectWindow("Sample");
setBatchMode("show");
roiManager("Show None");roiManager("Show All");roiManager("Show None");
setTool("Polygon");
do {
	waitForUser("Go to channel 3.\nOutline gray matter and press 't',\nthen click OK");
} while (roiManager("count") == 1 || roiManager("count") > 2);

roiManager("select", 1);
roiManager("rename", "Gray Matter");


//////OUTLINE LESIONS//////
lesionPresent = false;
multipleLesionsPresent = false;
firstLesionIndex = roiManager("count"); //For looping later

roiManager("Show None");roiManager("Show All");roiManager("Show None");
setTool("Polygon");
do {
        waitForUser(title + "\nGo to channel 1,\nIf present, outline lesions,\nand pressing 't' after each lesion.\nThen click OK.");
roiManager("deselect");

lastLesionIndex = roiManager("count")-1;

if (roiManager("count") != firstLesionIndex) {
	lesionPresent = true;
}
if (lastLesionIndex > firstLesionIndex) {
	multipleLesionsPresent = true;
}


//////COUNT CELLS IN EACH REGION//////

roiNamesArray = newArray();
roiAreasArray = newArray();
sourceImageArray = newArray();


//Count cells in entire section
roiOutputArray = CountCells(0, "Whole Section", 0);
roiNamesArray = Array.concat(roiNamesArray, roiOutputArray[0], roiOutputArray[0], roiOutputArray[0]);
roiAreasArray = Array.concat(roiAreasArray, roiOutputArray[1], roiOutputArray[1], roiOutputArray[1]);
sourceImageArray = Array.concat(sourceImageArray, title, title, title);

//Count cells in gray matter
roiOutputArray = CountCells(1, "Gray Matter", 0);
roiNamesArray = Array.concat(roiNamesArray, roiOutputArray[0], roiOutputArray[0], roiOutputArray[0]);
roiAreasArray = Array.concat(roiAreasArray, roiOutputArray[1], roiOutputArray[1], roiOutputArray[1]);
sourceImageArray = Array.concat(sourceImageArray, title, title, title);


//Count cells in individual lesions
if (lesionPresent) {
	for (i = firstLesionIndex; i < roiManager("count"); i++) {
	lesionName = "L" + i-2;
	roiOutputArray = CountCells(i, lesionName, 0);
	roiNamesArray = Array.concat(roiNamesArray, roiOutputArray[0], roiOutputArray[0], roiOutputArray[0]);
	roiAreasArray = Array.concat(roiAreasArray, roiOutputArray[1], roiOutputArray[1], roiOutputArray[1]);
	sourceImageArray = Array.concat(sourceImageArray, title, title, title);
	}
}
/////FUNCTIONS//////
//count spots in thresholded and masked images
function CountCells(roiIndex, roiName, showOutput) {
	run("Set Measurements...", "area redirect=None decimal=3");
	
	if (showOutput == 1) {
		show = "Bare Outlines";
	} else {
		show = "Nothing";
	}
	
	roiManager("Select", roiIndex);
	roiManager("Rename", roiName);
	
	run("Measure");
	roiArea = getResult("Area", nResults-1);
	
	
	roiNameAreaArray = newArray(roiName, roiArea);
	
    selectWindow("Ch2+");
	roiManager("Select", roiIndex);
	run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=["+show+"] summarize");	
	if (showOutput == 1) {
		roiManager("deselect");roiManager("Show All");roiManager("Show None");
		run("Invert");	
	}	
	
	selectWindow("Ch3+");
	roiManager("Select", roiIndex);
	run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=["+show+"] summarize");
	if (showOutput == 1) {
		roiManager("deselect");roiManager("Show All");roiManager("Show None");
		run("Invert");	
	}
	
		selectWindow("Ch2+Ch3+");
	roiManager("Select", roiIndex);
	run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=["+show+"] summarize");	
	if (showOutput == 1) {
		roiManager("deselect");roiManager("Show All");roiManager("Show None");
		run("Invert");	
	}
	
	return roiNameAreaArray;
}

//Add ROI, Area, and Source Image to Summary table and delete unneeded columns
Table.setColumn("ROI", roiNamesArray, "Summary");
Table.setColumn("ROI Area", roiAreasArray, "Summary");
Table.setColumn("Source Image", sourceImageArray, "Summary");

Table.deleteColumn("Total Area", "Summary");
Table.deleteColumn("Average Size", "Summary");
Table.deleteColumn("%Area", "Summary");


//////CALCULATE COUNTS PER mm^2//////
Table.rename("Summary", "Results");

roiDensityArray = newArray();
for (i = 0; i < nResults; i++) {
	roiCount = getResult("Count", i);
	roiArea = getResult("ROI Area", i);
	roiDensity = roiCount / roiArea * 1000000;
	roiDensityArray = Array.concat(roiDensityArray, roiDensity);
}

Table.setColumn("Count/mm^2", roiDensityArray, "Results");


//////MAKE QA IMAGE//////


selectWindow("Ch3+");
roiManager("Select", 0);
run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=[Bare Outlines]");
roiManager("deselect");roiManager("Show All");roiManager("Show None");
run("Invert");
rename("Drawing of Ch3+");	

selectWindow("Ch2+Ch3+");
roiManager("Select", 0);
run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=[Bare Outlines]");	
roiManager("deselect");roiManager("Show All");roiManager("Show None");
run("Invert");
rename("Drawing of Ch2+Ch3+");		
	
selectWindow("Ch2+");
roiManager("Select", 0);
run("Analyze Particles...", "size=30-500 circularity=0.2-1.0 show=[Bare Outlines]");	
roiManager("deselect");roiManager("Show All");roiManager("Show None");
run("Invert");	
rename("Drawing of Ch2+");
 
roiManager("deselect");roiManager("Show All");roiManager("Show None");
   
selectWindow("Sample");

selectWindow("Sample");
run("Stack to Images");

selectWindow("Sample-0001");
rename("Ch1 original");

selectWindow("Sample-0002");
run("Duplicate...", "title=Sample-0002 1");

selectWindow("Sample-0002");
run("Duplicate...", "title=Sample-0002 2");

selectWindow("Sample-0002");
rename("Ch2 original");

selectWindow("Sample-0003");
run("Duplicate...", "title=Sample-0003 1");

selectWindow("Sample-0003");
rename("Ch3 original");

run("Merge Channels...", "c1=[Drawing of Ch3+] c4=Sample-0003 1");
rename("Ch3+Counts");

run("Merge Channels...", "c1=[Drawing of Ch2+Ch3+] c4=Sample-0002 1");
rename("Ch2+Ch3+Counts");

run("Merge Channels...", "c1=[Drawing of Ch2+] c4=Sample-0002 2");
rename("Ch2+Counts");

run("Images to Stack", "name=_QA use");
rename(title+"_QA");

setBatchMode("show");
